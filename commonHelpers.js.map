{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst startBtn = document.querySelector('[data-start]');\nconst inputData = document.querySelector('input#datetime-picker');\nconst daysData = document.querySelector('[data-days]');\nconst hoursData = document.querySelector('[data-hours]');\nconst minutesData = document.querySelector('[data-minutes]');\nconst secondsData = document.querySelector('[data-seconds]');\nlet timeInterval;\nlet userSelectedDate;\nstartBtn.disabled = true;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n    if (userSelectedDate < Date.now()) {\n      iziToast.error({\n        message: 'Please choose a date in the future',\n        position: 'topRight',\n      });\n      startBtn.disabled = true;\n    } else {\n      startBtn.disabled = false;\n    }\n  },\n};\n\nfunction updateTimerDisplay() {\n  const timeDifference = userSelectedDate - Date.now();\n  const { days, hours, minutes, seconds } = convertMs(timeDifference);\n  daysData.textContent = days.toString().padStart(2, '0');\n  hoursData.textContent = hours.toString().padStart(2, '0');\n  minutesData.textContent = minutes.toString().padStart(2, '0');\n  secondsData.textContent = seconds.toString().padStart(2, '0');\n\n  if (timeDifference <= 0) {\n    stopTimer();\n  }\n}\n\nstartBtn.addEventListener('click', startTimer);\n\nfunction startTimer() {\n  inputData.disabled = true;\n  startBtn.disabled = true;\n\n  updateTimerDisplay();\n\n  timeInterval = setInterval(() => {\n    updateTimerDisplay();\n  }, 1000);\n}\n\nfunction stopTimer() {\n  clearInterval(timeInterval);\n  daysData.textContent = '00';\n  hoursData.textContent = '00';\n  minutesData.textContent = '00';\n  secondsData.textContent = '00';\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n  return { days, hours, minutes, seconds };\n}\nflatpickr(inputData, options);\n"],"names":["startBtn","inputData","daysData","hoursData","minutesData","secondsData","timeInterval","userSelectedDate","options","selectedDates","iziToast","updateTimerDisplay","timeDifference","days","hours","minutes","seconds","convertMs","stopTimer","startTimer","ms","flatpickr"],"mappings":"2GAKA,MAAMA,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAY,SAAS,cAAc,uBAAuB,EAC1DC,EAAW,SAAS,cAAc,aAAa,EAC/CC,EAAY,SAAS,cAAc,cAAc,EACjDC,EAAc,SAAS,cAAc,gBAAgB,EACrDC,EAAc,SAAS,cAAc,gBAAgB,EAC3D,IAAIC,EACAC,EACJP,EAAS,SAAW,GAEpB,MAAMQ,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBF,EAAmBE,EAAc,GAC7BF,EAAmB,KAAK,OAC1BG,EAAS,MAAM,CACb,QAAS,qCACT,SAAU,UAClB,CAAO,EACDV,EAAS,SAAW,IAEpBA,EAAS,SAAW,EAEvB,CACH,EAEA,SAASW,GAAqB,CAC5B,MAAMC,EAAiBL,EAAmB,KAAK,IAAG,EAC5C,CAAE,KAAAM,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAc,EAClEV,EAAS,YAAcW,EAAK,SAAU,EAAC,SAAS,EAAG,GAAG,EACtDV,EAAU,YAAcW,EAAM,SAAU,EAAC,SAAS,EAAG,GAAG,EACxDV,EAAY,YAAcW,EAAQ,SAAU,EAAC,SAAS,EAAG,GAAG,EAC5DV,EAAY,YAAcW,EAAQ,SAAU,EAAC,SAAS,EAAG,GAAG,EAExDJ,GAAkB,GACpBM,GAEJ,CAEAlB,EAAS,iBAAiB,QAASmB,CAAU,EAE7C,SAASA,GAAa,CACpBlB,EAAU,SAAW,GACrBD,EAAS,SAAW,GAEpBW,IAEAL,EAAe,YAAY,IAAM,CAC/BK,GACD,EAAE,GAAI,CACT,CAEA,SAASO,GAAY,CACnB,cAAcZ,CAAY,EAC1BJ,EAAS,YAAc,KACvBC,EAAU,YAAc,KACxBC,EAAY,YAAc,KAC1BC,EAAY,YAAc,IAC5B,CAEA,SAASY,EAAUG,EAAI,CAMrB,MAAMP,EAAO,KAAK,MAAMO,EAAK,KAAG,EAC1BN,EAAQ,KAAK,MAAOM,EAAK,MAAO,IAAI,EACpCL,EAAU,KAAK,MAAQK,EAAK,MAAO,KAAQ,GAAM,EACjDJ,EAAU,KAAK,MAASI,EAAK,MAAO,KAAQ,IAAU,GAAM,EAClE,MAAO,CAAE,KAAAP,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CACAK,EAAUpB,EAAWO,CAAO"}